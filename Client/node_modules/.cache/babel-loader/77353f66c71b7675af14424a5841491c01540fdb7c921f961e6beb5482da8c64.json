{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\EchoBond\\\\client\\\\src\\\\components\\\\musicBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Assuming FontAwesomeIcon and faPause are used elsewhere or will be used\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\n\n// Import custom style for the bar handle\nimport '../styles/handle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicBar({\n  duration\n}) {\n  _s();\n  const [value, setValue] = useState(0);\n\n  // Ensure there's always a small segment for the purple to show at the beginning\n  const percentage = value === 0 ? 0 : value / duration * 100;\n\n  // Updated sliderStyle to correctly reflect the initial appearance and dynamic changes\n  const sliderStyle = {\n    background: value === 0 ? '#393e46' : `linear-gradient(to right, purple ${percentage}%, #393e46 ${percentage}%)`,\n    // This ensures the right side starts with #393e46\n    cursor: 'pointer',\n    appearance: 'none',\n    width: '100%',\n    height: '6px',\n    borderRadius: '9999px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full mt-4 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", value, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: duration,\n      step: \"1\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      style: sliderStyle,\n      className: \"slider-thumb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(MusicBar, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n_c = MusicBar;\nexport default MusicBar;\nvar _c;\n$RefreshReg$(_c, \"MusicBar\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faPause","jsxDEV","_jsxDEV","MusicBar","duration","_s","value","setValue","percentage","sliderStyle","background","cursor","appearance","width","height","borderRadius","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","step","onChange","e","target","style","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/EchoBond/client/src/components/musicBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Assuming FontAwesomeIcon and faPause are used elsewhere or will be used\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Import custom style for the bar handle\r\nimport '../styles/handle.css';\r\n\r\nfunction MusicBar({ duration }) {\r\n    const [value, setValue] = useState(0);\r\n\r\n    // Ensure there's always a small segment for the purple to show at the beginning\r\n    const percentage = value === 0 ? 0 : (value / duration) * 100;\r\n\r\n    // Updated sliderStyle to correctly reflect the initial appearance and dynamic changes\r\n    const sliderStyle = {\r\n      background: value === 0 ? '#393e46' : `linear-gradient(to right, purple ${percentage}%, #393e46 ${percentage}%)`, // This ensures the right side starts with #393e46\r\n      cursor: 'pointer',\r\n      appearance: 'none',\r\n      width: '100%',\r\n      height: '6px',\r\n      borderRadius: '9999px',\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full mt-4 px-4\">\r\n            <p> {value} </p>\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max={duration}\r\n                step=\"1\"\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                style={sliderStyle}\r\n                className='slider-thumb'\r\n            />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MusicBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,QAAQ,mCAAmC;;AAE3D;AACA,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMU,UAAU,GAAGF,KAAK,KAAK,CAAC,GAAG,CAAC,GAAIA,KAAK,GAAGF,QAAQ,GAAI,GAAG;;EAE7D;EACA,MAAMK,WAAW,GAAG;IAClBC,UAAU,EAAEJ,KAAK,KAAK,CAAC,GAAG,SAAS,GAAI,oCAAmCE,UAAW,cAAaA,UAAW,IAAG;IAAE;IAClHG,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,KAAK;IACbC,YAAY,EAAE;EAChB,CAAC;EAED,oBACIb,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7Bf,OAAA;MAAAe,QAAA,GAAG,GAAC,EAACX,KAAK,EAAC,GAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChBnB,OAAA;MACIoB,IAAI,EAAC,OAAO;MACZC,GAAG,EAAC,GAAG;MACPC,GAAG,EAAEpB,QAAS;MACdqB,IAAI,EAAC,GAAG;MACRnB,KAAK,EAAEA,KAAM;MACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;MAC1CuB,KAAK,EAAEpB,WAAY;MACnBO,SAAS,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAAChB,EAAA,CA/BQF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}