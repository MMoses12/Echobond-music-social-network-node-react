{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\EchoBond\\\\client\\\\src\\\\components\\\\musicBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = ({\n  colorAfter = '#E1E1E6',\n  colorBefore = '#A5AAB2',\n  highlighted = '#EB3E3E',\n  size = 10,\n  // Note: Tailwind does not directly control the thumb size via utility classes\n  value,\n  onChange // Make sure to pass an onChange handler to update the value\n}) => {\n  _s();\n  const percent = value * 100;\n  const [hover, setHover] = useState(false);\n\n  // Inline style for the gradient background\n  const sliderStyle = {\n    background: `linear-gradient(to right, ${highlighted} 0%, ${highlighted} ${percent}%, ${colorAfter} ${percent}%, ${colorAfter} 100%)`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"w-full h-1 rounded-full cursor-pointer appearance-none bg-gray-200\",\n      type: \"range\",\n      onMouseOver: () => setHover(true),\n      onMouseLeave: () => setHover(false),\n      onChange: onChange,\n      value: value,\n      style: sliderStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Slider, \"bRXmKus9fOZFlca/6zXTYU+twGY=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Slider","colorAfter","colorBefore","highlighted","size","value","onChange","_s","percent","hover","setHover","sliderStyle","background","className","children","type","onMouseOver","onMouseLeave","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/EchoBond/client/src/components/musicBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Slider = ({\r\n  colorAfter = '#E1E1E6',\r\n  colorBefore = '#A5AAB2',\r\n  highlighted = '#EB3E3E',\r\n  size = 10, // Note: Tailwind does not directly control the thumb size via utility classes\r\n  value,\r\n  onChange, // Make sure to pass an onChange handler to update the value\r\n}) => {\r\n  const percent = value * 100;\r\n  const [hover, setHover] = useState(false);\r\n  \r\n  // Inline style for the gradient background\r\n  const sliderStyle = {\r\n    background: `linear-gradient(to right, ${highlighted} 0%, ${highlighted} ${percent}%, ${colorAfter} ${percent}%, ${colorAfter} 100%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full flex justify-center items-center\">\r\n      <input\r\n        className=\"w-full h-1 rounded-full cursor-pointer appearance-none bg-gray-200\"\r\n        type=\"range\"\r\n        onMouseOver={() => setHover(true)}\r\n        onMouseLeave={() => setHover(false)}\r\n        onChange={onChange}\r\n        value={value}\r\n        style={sliderStyle}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EACdC,UAAU,GAAG,SAAS;EACtBC,WAAW,GAAG,SAAS;EACvBC,WAAW,GAAG,SAAS;EACvBC,IAAI,GAAG,EAAE;EAAE;EACXC,KAAK;EACLC,QAAQ,CAAE;AACZ,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,OAAO,GAAGH,KAAK,GAAG,GAAG;EAC3B,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAEzC;EACA,MAAMc,WAAW,GAAG;IAClBC,UAAU,EAAG,6BAA4BT,WAAY,QAAOA,WAAY,IAAGK,OAAQ,MAAKP,UAAW,IAAGO,OAAQ,MAAKP,UAAW;EAChI,CAAC;EAED,oBACEF,OAAA;IAAKc,SAAS,EAAC,yCAAyC;IAAAC,QAAA,eACtDf,OAAA;MACEc,SAAS,EAAC,oEAAoE;MAC9EE,IAAI,EAAC,OAAO;MACZC,WAAW,EAAEA,CAAA,KAAMN,QAAQ,CAAC,IAAI,CAAE;MAClCO,YAAY,EAAEA,CAAA,KAAMP,QAAQ,CAAC,KAAK,CAAE;MACpCJ,QAAQ,EAAEA,QAAS;MACnBD,KAAK,EAAEA,KAAM;MACba,KAAK,EAAEP;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA7BIP,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}