{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\EchoBond\\\\client\\\\src\\\\components\\\\mainSpace\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { RenderContext } from '../../Pages/musicHome';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport MessageBar from '../chat/messagebar';\nimport Message from '../chat/message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat(props) {\n  _s();\n  const {\n    socket\n  } = useContext(RenderContext);\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [id, setID] = useState();\n  const messagesEndRef = useRef(null);\n  const navigate = useNavigate();\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const openSockets = conversationID => {\n    setID(conversationID);\n    socket.emit('conversation', conversationID);\n    const messageHandler = message => {\n      // Update a separate state variable to force re-render\n      console.log(message);\n      console.log(messages);\n      setMessages(prevMessages => [...prevMessages, message]);\n    };\n\n    // Set up socket event listener\n    socket.on('message', messageHandler);\n  };\n  function getUsernameFromToken() {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!accessToken) {\n      return null;\n    }\n    try {\n      const decodedToken = jwtDecode(accessToken);\n      return decodedToken.username; // Assuming the username is stored in the token under 'username'\n    } catch (error) {\n      const refreshToken = localStorage.getItem('refreshToken');\n      axios.defaults.headers.common['Authorization'] = `Bearer ${refreshToken}`;\n      axios.get(\"http://100.91.43.32:4000/token/refresh-token\").then(response => {\n        localStorage.setItem(\"accessToken\", response.data.accessToken);\n        const decodedToken = jwtDecode(response.data.accessToken);\n        return decodedToken.username; // Assuming the username is stored in the token under 'username'\n      }).catch(error => {\n        navigate(\"/\", {\n          replace: true\n        });\n      });\n      return null;\n    }\n  }\n  useEffect(() => {\n    setMessages([]);\n    if (id) {\n      socket.emit('leaveChat', id);\n    }\n  }, [props.friendsName]);\n  useEffect(() => {\n    const accessToken = localStorage.getItem('accessToken');\n    axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n    axios.post('http://100.91.43.32:4000/chat/get-conversation-id', {\n      friend: props.friendsName\n    }).then(response => {\n      setMessages([]);\n      openSockets(response.data.conversationID);\n      setUsername(getUsernameFromToken);\n    }).catch(error => {\n      const refreshToken = localStorage.getItem('refreshToken');\n      axios.defaults.headers.common['Authorization'] = `Bearer ${refreshToken}`;\n      axios.get(\"http://100.91.43.32:4000/token/refresh-token\").then(response => {\n        localStorage.setItem(\"accessToken\", response.data.accessToken);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.accessToken}`;\n        axios.post('http://100.91.43.32:4000/chat/get-conversation-id', {\n          friend: props.friendsName\n        }).then(response => {\n          setMessages([]);\n          openSockets(response.data.conversationID);\n          setUsername(getUsernameFromToken);\n        });\n      }).catch(error => {\n        navigate(\"/\", {\n          replace: true\n        });\n      });\n    });\n  }, [props.friendsName]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Go to main page.\n  const musicHome = () => {\n    if (props) {\n      props.setChoice('mainSpace');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col text-white h-full w-full rounded-3xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row gap-4 items-center text-xl ml-4 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faArrowLeft,\n        className: \"cursor-pointer\",\n        onClick: musicHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", props.friendsName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 h-4/5 w-4/6 mx-auto overflow-y-auto\",\n      children: [messages && messages.map((message, index) =>\n      /*#__PURE__*/\n      // Check if message exists and is not empty\n      // You might need to adjust this condition based on your message structure\n      _jsxDEV(Message, {\n        message: message,\n        username: username\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-5 rounded-b-3xl w-full\",\n      children: /*#__PURE__*/_jsxDEV(MessageBar, {\n        conversationID: id,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"FjgxTXkPOhkbJyI3IvVR3anfiOI=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useRef","useNavigate","axios","jwtDecode","RenderContext","ToastContainer","toast","FontAwesomeIcon","faArrowLeft","MessageBar","Message","jsxDEV","_jsxDEV","Chat","props","_s","socket","username","setUsername","messages","setMessages","id","setID","messagesEndRef","navigate","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","openSockets","conversationID","emit","messageHandler","message","console","log","prevMessages","on","getUsernameFromToken","accessToken","localStorage","getItem","decodedToken","error","refreshToken","defaults","headers","common","get","then","response","setItem","data","catch","replace","friendsName","post","friend","musicHome","setChoice","className","children","icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","ref","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/EchoBond/client/src/components/mainSpace/chat.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nimport { RenderContext } from '../../Pages/musicHome';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport MessageBar from '../chat/messagebar';\r\nimport Message from '../chat/message';\r\n\r\nfunction Chat (props) {\r\n    const { socket } = useContext(RenderContext)\r\n    const [username, setUsername] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n    const [id, setID] = useState()\r\n    const messagesEndRef = useRef(null)\r\n    const navigate = useNavigate()\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    const openSockets = (conversationID) => {\r\n        setID(conversationID);\r\n\r\n        socket.emit('conversation', conversationID);\r\n\r\n        const messageHandler = (message) => {\r\n            // Update a separate state variable to force re-render\r\n            console.log(message)\r\n            console.log(messages)\r\n            setMessages((prevMessages) => [...prevMessages, message]);\r\n        };\r\n\r\n        // Set up socket event listener\r\n        socket.on('message', messageHandler)\r\n    }\r\n\r\n    function getUsernameFromToken() {\r\n        const accessToken = localStorage.getItem('accessToken');\r\n        if (!accessToken) {\r\n            return null;\r\n        }\r\n    \r\n        try {\r\n            const decodedToken = jwtDecode(accessToken)\r\n            return decodedToken.username; // Assuming the username is stored in the token under 'username'\r\n        } catch (error) {\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${refreshToken}`\r\n\r\n            axios.get(\"http://100.91.43.32:4000/token/refresh-token\")\r\n            .then(response => {\r\n                localStorage.setItem(\"accessToken\", response.data.accessToken)\r\n                const decodedToken = jwtDecode(response.data.accessToken)\r\n            \r\n                return decodedToken.username; // Assuming the username is stored in the token under 'username'\r\n            })\r\n            .catch(error => {\r\n                navigate(\"/\", { replace: true })\r\n            })\r\n            \r\n            return null;\r\n        }\r\n    }    \r\n\r\n    useEffect(() => {\r\n        setMessages([])\r\n        if (id) {\r\n            socket.emit('leaveChat', id)\r\n        }\r\n    }, [props.friendsName])\r\n\r\n    useEffect(() => {\r\n        const accessToken = localStorage.getItem('accessToken');\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`\r\n\r\n        axios.post('http://100.91.43.32:4000/chat/get-conversation-id', { friend: props.friendsName })\r\n            .then((response) => {\r\n                setMessages([])\r\n                openSockets(response.data.conversationID)\r\n                setUsername(getUsernameFromToken)\r\n            })\r\n            .catch(error => {        \r\n                const refreshToken = localStorage.getItem('refreshToken');\r\n                axios.defaults.headers.common['Authorization'] = `Bearer ${refreshToken}`\r\n\r\n                axios.get(\"http://100.91.43.32:4000/token/refresh-token\")\r\n                .then(response => {\r\n                    localStorage.setItem(\"accessToken\", response.data.accessToken)   \r\n                    axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.accessToken}`\r\n\r\n                    axios.post('http://100.91.43.32:4000/chat/get-conversation-id', { friend: props.friendsName })\r\n                    .then(response => {\r\n                        setMessages([])\r\n                        openSockets(response.data.conversationID)\r\n                        setUsername(getUsernameFromToken)\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    navigate(\"/\", { replace: true })\r\n                })\r\n            });\r\n    }, [props.friendsName]);\r\n\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    }, [messages])\r\n\r\n    // Go to main page.\r\n    const musicHome = () => {\r\n        if (props) {\r\n            props.setChoice('mainSpace');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col text-white h-full w-full rounded-3xl\">\r\n            <div className=\"flex flex-row gap-4 items-center text-xl ml-4 pt-4\">\r\n                <FontAwesomeIcon icon={faArrowLeft} className=\"cursor-pointer\" onClick={musicHome} />\r\n                <p> {props.friendsName} </p>\r\n            </div>\r\n            <div className=\"mt-4 h-4/5 w-4/6 mx-auto overflow-y-auto\">\r\n                {messages &&\r\n                    messages.map((message, index) => (\r\n                    // Check if message exists and is not empty\r\n                    // You might need to adjust this condition based on your message structure\r\n                    <Message key={index} message={message} username={username} />\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n            <div className=\"py-5 rounded-b-3xl w-full\">\r\n                <MessageBar conversationID={id} username={username} />\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}