{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\EchoBond\\\\Client\\\\src\\\\components\\\\errorMessage.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ErrorMessage(error) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error.passwordMatch && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-200 text-center font-bold pt-2\",\n      children: \" Passwords don't match \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 37\n    }, this), error.usernameError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-200 text-center font-bold pt-2\",\n      children: \" Username already exists \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 37\n    }, this), error.emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-200 text-center font-bold pt-2\",\n      children: \" An account is already registered with this email \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 34\n    }, this), error.loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-200 text-center font-bold\",\n      children: \" Username and password don't match \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 34\n    }, this), error.passwordLength && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-200 text-center font-bold pt-2\",\n      children: \" Password must be over 8 characters \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = ErrorMessage;\nexport default ErrorMessage;\nvar _c;\n$RefreshReg$(_c, \"ErrorMessage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ErrorMessage","error","children","passwordMatch","className","fileName","_jsxFileName","lineNumber","columnNumber","usernameError","emailError","loginError","passwordLength","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/EchoBond/Client/src/components/errorMessage.js"],"sourcesContent":["import React from \"react\"\r\n\r\nfunction ErrorMessage (error) {\r\n    return (\r\n        <div>\r\n            {error.passwordMatch && <p className=\"text-red-200 text-center font-bold pt-2\"> Passwords don't match </p>}\r\n            {error.usernameError && <p className=\"text-red-200 text-center font-bold pt-2\"> Username already exists </p>}\r\n            {error.emailError && <p className=\"text-red-200 text-center font-bold pt-2\"> An account is already registered with this email </p>}\r\n            {error.loginError && <p className=\"text-red-200 text-center font-bold\"> Username and password don't match </p>}\r\n            {error.passwordLength && <p className=\"text-red-200 text-center font-bold pt-2\"> Password must be over 8 characters </p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,YAAYA,CAAEC,KAAK,EAAE;EAC1B,oBACIF,OAAA;IAAAG,QAAA,GACKD,KAAK,CAACE,aAAa,iBAAIJ,OAAA;MAAGK,SAAS,EAAC,yCAAyC;MAAAF,QAAA,EAAC;IAAuB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACzGP,KAAK,CAACQ,aAAa,iBAAIV,OAAA;MAAGK,SAAS,EAAC,yCAAyC;MAAAF,QAAA,EAAC;IAAyB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC3GP,KAAK,CAACS,UAAU,iBAAIX,OAAA;MAAGK,SAAS,EAAC,yCAAyC;MAAAF,QAAA,EAAC;IAAkD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACjIP,KAAK,CAACU,UAAU,iBAAIZ,OAAA;MAAGK,SAAS,EAAC,oCAAoC;MAAAF,QAAA,EAAC;IAAmC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC7GP,KAAK,CAACW,cAAc,iBAAIb,OAAA;MAAGK,SAAS,EAAC,yCAAyC;MAAAF,QAAA,EAAC;IAAoC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvH,CAAC;AAEd;AAACK,EAAA,GAVQb,YAAY;AAYrB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}