{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\EchoBond\\\\Client\\\\src\\\\components\\\\musicBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPause, faShuffle, faPlay, faForwardStep, faBackwardStep, faRepeat } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/handle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicBar({\n  song,\n  audioRef\n}) {\n  _s();\n  const [value, setValue] = useState(0);\n  const [duration, setDuration] = useState(song ? song.duration : 0);\n  const [randomSelected, setRandomSelected] = useState(false);\n  const [repeatSelected, setRepeatSelected] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [playing, setPlaying] = useState(true); // Set playing to true initially for auto play\n\n  // Calculate the percentage for the slider\n  const percentage = duration ? value / duration * 100 : 0;\n\n  // Toggle random play\n  const changeRandom = () => {\n    setRandomSelected(!randomSelected);\n  };\n\n  // Toggle repeat play\n  const changeRepeat = () => {\n    setRepeatSelected(!repeatSelected);\n  };\n\n  // Play song\n  const playSong = () => {\n    if (audioRef.current) {\n      audioRef.current.play();\n      setPlaying(true);\n    }\n  };\n\n  // Pause song\n  const pauseSong = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      setPlaying(false);\n    }\n  };\n\n  // Function to fast forward or rewind\n  const changeTime = event => {\n    const newTime = parseFloat(event.target.value);\n    setValue(newTime);\n    if (audioRef.current) {\n      audioRef.current.currentTime = newTime;\n    }\n  };\n\n  // Use the timeupdate event to synchronize the value\n  useEffect(() => {\n    const audioElement = audioRef.current;\n    const handleTimeUpdate = () => {\n      setValue(audioElement.currentTime);\n    };\n    const handleLoadedMetadata = () => {\n      setDuration(audioElement.duration);\n      setValue(0);\n    };\n    const handleEnded = () => {\n      if (repeatSelected) {\n        audioElement.currentTime = 0;\n        audioElement.play();\n      }\n    };\n    if (audioElement) {\n      audioElement.addEventListener('timeupdate', handleTimeUpdate);\n      audioElement.addEventListener('loadedmetadata', handleLoadedMetadata);\n      audioElement.addEventListener('ended', handleEnded);\n\n      // Clean up event listeners on component unmount\n      return () => {\n        audioElement.removeEventListener('timeupdate', handleTimeUpdate);\n        audioElement.removeEventListener('loadedmetadata', handleLoadedMetadata);\n        audioElement.removeEventListener('ended', handleEnded);\n      };\n    }\n  }, [audioRef, repeatSelected]);\n\n  // Handle song change and play immediately\n  useEffect(() => {\n    const audioElement = audioRef.current;\n    if (audioElement && song) {\n      // Pause the audio before changing the source\n      audioElement.pause();\n      setPlaying(false);\n\n      // Set the new source and load it\n      audioElement.src = song;\n      audioElement.load();\n\n      // Play the new song once it's loaded\n      const playNewSong = () => {\n        audioElement.play();\n        setPlaying(true);\n      };\n      audioElement.addEventListener('loadeddata', playNewSong);\n\n      // Clean up event listener\n      return () => {\n        audioElement.removeEventListener('loadeddata', playNewSong);\n      };\n    }\n  }, [song, audioRef]);\n\n  // Convert seconds to MM:SS format\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // Updated sliderStyle to correctly reflect the initial appearance and dynamic changes\n  const sliderStyle = {\n    background: isHovered ? `linear-gradient(to right, #9818d6 ${percentage}%, #393e46 ${percentage}%)` : `linear-gradient(to right, white ${percentage}%, #393e46 ${percentage}%)`,\n    cursor: 'pointer',\n    appearance: 'none',\n    width: '100%',\n    height: '4px',\n    borderRadius: '9999px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full justify-center items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row w-full justify-center items-center gap-5\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: `${randomSelected ? 'text-purple-200' : 'text-gray-200'} w-5 h-5 cursor-pointer select-none`,\n        icon: faShuffle,\n        onClick: changeRandom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"text-gray-200 hover:text-white w-5 h-5 cursor-pointer select-none\",\n        icon: faBackwardStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bg-purple-400 w-8 h-8 rounded-full p-2 flex justify-center items-center\",\n          style: {\n            top: '-16px'\n          },\n          children: playing ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"text-white w-5 h-5 cursor-pointer select-none\",\n            icon: faPause,\n            onClick: pauseSong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"text-white w-4 h-4 pl-0.5 cursor-pointer select-none\",\n            icon: faPlay,\n            onClick: playSong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-3\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"text-gray-200 hover:text-white w-5 h-5 cursor-pointer select-none\",\n        icon: faForwardStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: `${repeatSelected ? 'text-purple-200' : 'text-gray-200'} w-5 h-5 cursor-pointer select-none`,\n        icon: faRepeat,\n        onClick: changeRepeat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row w-full mt-5 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-200 font-exo text-sm w-3 mr-6\",\n        children: [\" \", formatTime(value), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: duration,\n        step: \"0.1\",\n        value: value,\n        onMouseEnter: () => setIsHovered(true),\n        onMouseLeave: () => setIsHovered(false),\n        onChange: changeTime,\n        style: sliderStyle,\n        className: \"slider-thumb mt-2.5 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-200 font-exo text-sm w-3 ml-3\",\n        children: [\" \", formatTime(duration), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n_s(MusicBar, \"MnX177cXIocVDkBZvhZT5eDpbJA=\");\n_c = MusicBar;\nexport default MusicBar;\nvar _c;\n$RefreshReg$(_c, \"MusicBar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faPause","faShuffle","faPlay","faForwardStep","faBackwardStep","faRepeat","jsxDEV","_jsxDEV","MusicBar","song","audioRef","_s","value","setValue","duration","setDuration","randomSelected","setRandomSelected","repeatSelected","setRepeatSelected","isHovered","setIsHovered","playing","setPlaying","percentage","changeRandom","changeRepeat","playSong","current","play","pauseSong","pause","changeTime","event","newTime","parseFloat","target","currentTime","audioElement","handleTimeUpdate","handleLoadedMetadata","handleEnded","addEventListener","removeEventListener","src","load","playNewSong","formatTime","seconds","minutes","Math","floor","secs","sliderStyle","background","cursor","appearance","width","height","borderRadius","className","children","icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","top","ref","type","min","max","step","onMouseEnter","onMouseLeave","onChange","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/EchoBond/Client/src/components/musicBar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPause, faShuffle, faPlay, faForwardStep, faBackwardStep, faRepeat } from '@fortawesome/free-solid-svg-icons';\r\nimport '../styles/handle.css';\r\n\r\nfunction MusicBar({ song, audioRef }) {\r\n    const [value, setValue] = useState(0);\r\n    const [duration, setDuration] = useState(song ? song.duration : 0);\r\n    const [randomSelected, setRandomSelected] = useState(false);\r\n    const [repeatSelected, setRepeatSelected] = useState(false);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [playing, setPlaying] = useState(true); // Set playing to true initially for auto play\r\n\r\n    // Calculate the percentage for the slider\r\n    const percentage = duration ? (value / duration) * 100 : 0;\r\n\r\n    // Toggle random play\r\n    const changeRandom = () => {\r\n        setRandomSelected(!randomSelected);\r\n    };\r\n\r\n    // Toggle repeat play\r\n    const changeRepeat = () => {\r\n        setRepeatSelected(!repeatSelected);\r\n    };\r\n\r\n    // Play song\r\n    const playSong = () => {\r\n        if (audioRef.current) {\r\n            audioRef.current.play();\r\n            setPlaying(true);\r\n        }\r\n    };\r\n\r\n    // Pause song\r\n    const pauseSong = () => {\r\n        if (audioRef.current) {\r\n            audioRef.current.pause();\r\n            setPlaying(false);\r\n        }\r\n    };\r\n\r\n    // Function to fast forward or rewind\r\n    const changeTime = (event) => {\r\n        const newTime = parseFloat(event.target.value);\r\n        setValue(newTime);\r\n        if (audioRef.current) {\r\n            audioRef.current.currentTime = newTime;\r\n        }\r\n    };\r\n\r\n    // Use the timeupdate event to synchronize the value\r\n    useEffect(() => {\r\n        const audioElement = audioRef.current;\r\n\r\n        const handleTimeUpdate = () => {\r\n            setValue(audioElement.currentTime);\r\n        };\r\n\r\n        const handleLoadedMetadata = () => {\r\n            setDuration(audioElement.duration);\r\n            setValue(0);\r\n        };\r\n\r\n        const handleEnded = () => {\r\n            if (repeatSelected) {\r\n                audioElement.currentTime = 0;\r\n                audioElement.play();\r\n            }\r\n        };\r\n\r\n        if (audioElement) {\r\n            audioElement.addEventListener('timeupdate', handleTimeUpdate);\r\n            audioElement.addEventListener('loadedmetadata', handleLoadedMetadata);\r\n            audioElement.addEventListener('ended', handleEnded);\r\n\r\n            // Clean up event listeners on component unmount\r\n            return () => {\r\n                audioElement.removeEventListener('timeupdate', handleTimeUpdate);\r\n                audioElement.removeEventListener('loadedmetadata', handleLoadedMetadata);\r\n                audioElement.removeEventListener('ended', handleEnded);\r\n            };\r\n        }\r\n    }, [audioRef, repeatSelected]);\r\n\r\n    // Handle song change and play immediately\r\n    useEffect(() => {\r\n        const audioElement = audioRef.current;\r\n\r\n        if (audioElement && song) {\r\n            // Pause the audio before changing the source\r\n            audioElement.pause();\r\n            setPlaying(false);\r\n\r\n            // Set the new source and load it\r\n            audioElement.src = song;\r\n            audioElement.load();\r\n\r\n            // Play the new song once it's loaded\r\n            const playNewSong = () => {\r\n                audioElement.play();\r\n                setPlaying(true);\r\n            };\r\n\r\n            audioElement.addEventListener('loadeddata', playNewSong);\r\n\r\n            // Clean up event listener\r\n            return () => {\r\n                audioElement.removeEventListener('loadeddata', playNewSong);\r\n            };\r\n        }\r\n    }, [song, audioRef]);\r\n\r\n    // Convert seconds to MM:SS format\r\n    const formatTime = (seconds) => {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const secs = Math.floor(seconds % 60);\r\n        return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\r\n    };\r\n\r\n    // Updated sliderStyle to correctly reflect the initial appearance and dynamic changes\r\n    const sliderStyle = {\r\n        background: isHovered\r\n            ? `linear-gradient(to right, #9818d6 ${percentage}%, #393e46 ${percentage}%)`\r\n            : `linear-gradient(to right, white ${percentage}%, #393e46 ${percentage}%)`,\r\n        cursor: 'pointer',\r\n        appearance: 'none',\r\n        width: '100%',\r\n        height: '4px',\r\n        borderRadius: '9999px',\r\n    };\r\n\r\n    return (\r\n        <div className='flex flex-col w-full justify-center items-center'>\r\n            <div className='flex flex-row w-full justify-center items-center gap-5'>\r\n                <FontAwesomeIcon className={`${randomSelected ? 'text-purple-200' : 'text-gray-200'} w-5 h-5 cursor-pointer select-none`} icon={faShuffle} onClick={changeRandom} />\r\n                <FontAwesomeIcon className='text-gray-200 hover:text-white w-5 h-5 cursor-pointer select-none' icon={faBackwardStep} />\r\n                <div className='relative'>\r\n                    <div className='absolute bg-purple-400 w-8 h-8 rounded-full p-2 flex justify-center items-center' style={{ top: '-16px' }}>\r\n                        {playing ?\r\n                            <FontAwesomeIcon className='text-white w-5 h-5 cursor-pointer select-none' icon={faPause} onClick={pauseSong} />\r\n                            :\r\n                            <FontAwesomeIcon className='text-white w-4 h-4 pl-0.5 cursor-pointer select-none' icon={faPlay} onClick={playSong} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='ml-3'> </div> {/* Make space between two icons */}\r\n                <FontAwesomeIcon className='text-gray-200 hover:text-white w-5 h-5 cursor-pointer select-none' icon={faForwardStep} />\r\n                <FontAwesomeIcon className={`${repeatSelected ? 'text-purple-200' : 'text-gray-200'} w-5 h-5 cursor-pointer select-none`} icon={faRepeat} onClick={changeRepeat} />\r\n            </div>\r\n            <div className=\"flex flex-row w-full mt-5 px-4\">\r\n                <audio ref={audioRef} />\r\n                <p className=\"text-gray-200 font-exo text-sm w-3 mr-6\"> {formatTime(value)} </p>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max={duration}\r\n                    step=\"0.1\"\r\n                    value={value}\r\n                    onMouseEnter={() => setIsHovered(true)}\r\n                    onMouseLeave={() => setIsHovered(false)}\r\n                    onChange={changeTime}\r\n                    style={sliderStyle}\r\n                    className='slider-thumb mt-2.5 w-full'\r\n                />\r\n                <p className=\"text-gray-200 font-exo text-sm w-3 ml-3\"> {formatTime(duration)} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MusicBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}