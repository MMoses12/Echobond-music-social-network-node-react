{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\EchoBond\\\\Client\\\\src\\\\components\\\\musicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jwtDecode } from 'jwt-decode';\nimport { RenderContext } from \"../Pages/musicHome\";\nimport MusicBar from \"./musicBar\";\nimport AudioBar from \"./audioBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicPlayer(songInfo) {\n  _s();\n  const [song, setSong] = useState();\n  const [songImage, setSongImage] = useState();\n  const [songTitle, setSongTitle] = useState();\n  const [songArtist, setSongArtist] = useState();\n  const audioRef = useRef(null);\n  const navigate = useNavigate();\n  const {\n    socket\n  } = useContext(RenderContext);\n\n  // Get username from the token.\n  const getUsernameFromToken = () => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!accessToken) {\n      return null;\n    }\n    try {\n      const decodedToken = jwtDecode(accessToken);\n      return decodedToken.username; // Assuming the username is stored in the token under 'username'\n    } catch (error) {\n      const refreshToken = localStorage.getItem('refreshToken');\n      axios.defaults.headers.common['Authorization'] = `Bearer ${refreshToken}`;\n      axios.get(\"http://100.91.43.32:4000/token/refresh-token\").then(response => {\n        localStorage.setItem(\"accessToken\", response.data.accessToken);\n        const decodedToken = jwtDecode(response.data.accessToken);\n        return decodedToken.username; // Assuming the username is stored in the token under 'username'\n      }).catch(error => {\n        navigate(\"/\", {\n          replace: true\n        });\n      });\n      return null;\n    }\n  };\n  useEffect(() => {\n    setSongImage(songInfo.image);\n    setSongArtist(songInfo.artist);\n    setSongTitle(songInfo.title);\n  }, [songInfo]);\n\n  // Get the requested song from the database.\n  useEffect(() => {\n    if (songTitle) {\n      const username = getUsernameFromToken();\n\n      // Update a separate state variable to force re-render.\n      const audioHandle = data => {\n        console.log(data);\n        const blob = new Blob([data], {\n          type: 'audio/mp3'\n        });\n        const url = URL.createObjectURL(blob);\n        setSong(url);\n      };\n      socket.emit('listenSong', username, songTitle);\n      socket.on('getSong', audioHandle);\n    }\n  }, [songTitle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-0 w-full h-24 bg-black-200 flex items-center justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-center ml-5\",\n      children: [songImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: songImage,\n        className: \"w-16 select-none\",\n        alt: \"Album Cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-36\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 96\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-center items-start pl-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-white text-md font-exo cursor-pointer hover:underline select-none\",\n          children: [\" \", songTitle, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-200 text-sm font-exo cursor-pointer hover:underline select-none\",\n          children: [\" \", songArtist, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center w-1/3\",\n      children: /*#__PURE__*/_jsxDEV(MusicBar, {\n        audioRef: audioRef,\n        song: song,\n        setSongTitle: setSongTitle,\n        setSongImage: setSongImage,\n        setSongArtist: setSongArtist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mr-20\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(AudioBar, {\n        audio: audioRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 31\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicPlayer, \"6vXKGoOY++J4ipCx9WRJJ8FmulE=\", false, function () {\n  return [useNavigate];\n});\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","useNavigate","axios","jwtDecode","RenderContext","MusicBar","AudioBar","jsxDEV","_jsxDEV","MusicPlayer","songInfo","_s","song","setSong","songImage","setSongImage","songTitle","setSongTitle","songArtist","setSongArtist","audioRef","navigate","socket","getUsernameFromToken","accessToken","localStorage","getItem","decodedToken","username","error","refreshToken","defaults","headers","common","get","then","response","setItem","data","catch","replace","image","artist","title","audioHandle","console","log","blob","Blob","type","url","URL","createObjectURL","emit","on","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","audio","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/EchoBond/Client/src/components/musicPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nimport { RenderContext } from \"../Pages/musicHome\";\r\n\r\nimport MusicBar from \"./musicBar\";\r\n\r\nimport AudioBar from \"./audioBar\";\r\n\r\nfunction MusicPlayer (songInfo) {\r\n    const [song, setSong] = useState()\r\n    const [songImage, setSongImage] = useState()\r\n    const [songTitle, setSongTitle] = useState()\r\n    const [songArtist, setSongArtist] = useState()\r\n    const audioRef = useRef(null)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { socket } = useContext(RenderContext)\r\n\r\n    // Get username from the token.\r\n    const getUsernameFromToken = () => {\r\n        const accessToken = localStorage.getItem('accessToken');\r\n        if (!accessToken) {\r\n            return null;\r\n        }\r\n    \r\n        try {\r\n            const decodedToken = jwtDecode(accessToken)\r\n            return decodedToken.username; // Assuming the username is stored in the token under 'username'\r\n        } catch (error) {\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${refreshToken}`\r\n\r\n            axios.get(\"http://100.91.43.32:4000/token/refresh-token\")\r\n            .then(response => {\r\n                localStorage.setItem(\"accessToken\", response.data.accessToken)\r\n                const decodedToken = jwtDecode(response.data.accessToken)\r\n            \r\n                return decodedToken.username; // Assuming the username is stored in the token under 'username'\r\n            })\r\n            .catch(error => {\r\n                navigate(\"/\", { replace: true })\r\n            })\r\n            \r\n            return null;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSongImage(songInfo.image)\r\n        setSongArtist(songInfo.artist)\r\n        setSongTitle(songInfo.title)\r\n    }, [songInfo])\r\n\r\n    // Get the requested song from the database.\r\n    useEffect(() => {\r\n        if (songTitle) {\r\n            const username = getUsernameFromToken()\r\n\r\n            // Update a separate state variable to force re-render.\r\n            const audioHandle = (data) => {\r\n                console.log(data);\r\n                const blob = new Blob([data], { type: 'audio/mp3' });\r\n                const url = URL.createObjectURL(blob);\r\n                setSong(url);\r\n            };\r\n\r\n            socket.emit('listenSong', username, songTitle)\r\n\r\n            socket.on('getSong', audioHandle)\r\n        }\r\n    }, [songTitle]);    \r\n\r\n  return (\r\n    <div className=\"fixed bottom-0 w-full h-24 bg-black-200 flex items-center justify-between\">\r\n      <div className=\"flex flex-row items-center ml-5\">\r\n        { songImage ? <img src={songImage} className=\"w-16 select-none\" alt=\"Album Cover\" /> : <div className=\"ml-36\"> </div> }\r\n        <div className=\"flex flex-col justify-center items-start pl-3\">\r\n            <h3 className=\"text-white text-md font-exo cursor-pointer hover:underline select-none\"> {songTitle} </h3>\r\n            <p className=\"text-gray-200 text-sm font-exo cursor-pointer hover:underline select-none\"> {songArtist} </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center items-center w-1/3\">\r\n        <MusicBar \r\n            audioRef={audioRef} \r\n            song={song} \r\n            setSongTitle={setSongTitle}\r\n            setSongImage={setSongImage}\r\n            setSongArtist={setSongArtist}\r\n        />\r\n      </div>\r\n      <div className=\"mr-20\"> <AudioBar audio={audioRef} /> </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MusicPlayer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,OAAO;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,YAAY;AAEtC,SAASC,aAAa,QAAQ,oBAAoB;AAElD,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,WAAWA,CAAEC,QAAQ,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,CAAC;EAC9C,MAAMuB,QAAQ,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMsB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9B,MAAM;IAAEqB;EAAO,CAAC,GAAGtB,UAAU,CAACI,aAAa,CAAC;;EAE5C;EACA,MAAMmB,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACvD,IAAI,CAACF,WAAW,EAAE;MACd,OAAO,IAAI;IACf;IAEA,IAAI;MACA,MAAMG,YAAY,GAAGxB,SAAS,CAACqB,WAAW,CAAC;MAC3C,OAAOG,YAAY,CAACC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMC,YAAY,GAAGL,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzDxB,KAAK,CAAC6B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASH,YAAa,EAAC;MAEzE5B,KAAK,CAACgC,GAAG,CAAC,8CAA8C,CAAC,CACxDC,IAAI,CAACC,QAAQ,IAAI;QACdX,YAAY,CAACY,OAAO,CAAC,aAAa,EAAED,QAAQ,CAACE,IAAI,CAACd,WAAW,CAAC;QAC9D,MAAMG,YAAY,GAAGxB,SAAS,CAACiC,QAAQ,CAACE,IAAI,CAACd,WAAW,CAAC;QAEzD,OAAOG,YAAY,CAACC,QAAQ,CAAC,CAAC;MAClC,CAAC,CAAC,CACDW,KAAK,CAACV,KAAK,IAAI;QACZR,QAAQ,CAAC,GAAG,EAAE;UAAEmB,OAAO,EAAE;QAAK,CAAC,CAAC;MACpC,CAAC,CAAC;MAEF,OAAO,IAAI;IACf;EACJ,CAAC;EAED1C,SAAS,CAAC,MAAM;IACZiB,YAAY,CAACL,QAAQ,CAAC+B,KAAK,CAAC;IAC5BtB,aAAa,CAACT,QAAQ,CAACgC,MAAM,CAAC;IAC9BzB,YAAY,CAACP,QAAQ,CAACiC,KAAK,CAAC;EAChC,CAAC,EAAE,CAACjC,QAAQ,CAAC,CAAC;;EAEd;EACAZ,SAAS,CAAC,MAAM;IACZ,IAAIkB,SAAS,EAAE;MACX,MAAMY,QAAQ,GAAGL,oBAAoB,CAAC,CAAC;;MAEvC;MACA,MAAMqB,WAAW,GAAIN,IAAI,IAAK;QAC1BO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;QACjB,MAAMS,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACV,IAAI,CAAC,EAAE;UAAEW,IAAI,EAAE;QAAY,CAAC,CAAC;QACpD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QACrClC,OAAO,CAACqC,GAAG,CAAC;MAChB,CAAC;MAED5B,MAAM,CAAC+B,IAAI,CAAC,YAAY,EAAEzB,QAAQ,EAAEZ,SAAS,CAAC;MAE9CM,MAAM,CAACgC,EAAE,CAAC,SAAS,EAAEV,WAAW,CAAC;IACrC;EACJ,CAAC,EAAE,CAAC5B,SAAS,CAAC,CAAC;EAEjB,oBACER,OAAA;IAAK+C,SAAS,EAAC,2EAA2E;IAAAC,QAAA,gBACxFhD,OAAA;MAAK+C,SAAS,EAAC,iCAAiC;MAAAC,QAAA,GAC5C1C,SAAS,gBAAGN,OAAA;QAAKiD,GAAG,EAAE3C,SAAU;QAACyC,SAAS,EAAC,kBAAkB;QAACG,GAAG,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGtD,OAAA;QAAK+C,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrHtD,OAAA;QAAK+C,SAAS,EAAC,+CAA+C;QAAAC,QAAA,gBAC1DhD,OAAA;UAAI+C,SAAS,EAAC,wEAAwE;UAAAC,QAAA,GAAC,GAAC,EAACxC,SAAS,EAAC,GAAC;QAAA;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzGtD,OAAA;UAAG+C,SAAS,EAAC,2EAA2E;UAAAC,QAAA,GAAC,GAAC,EAACtC,UAAU,EAAC,GAAC;QAAA;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1G,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNtD,OAAA;MAAK+C,SAAS,EAAC,wCAAwC;MAAAC,QAAA,eACrDhD,OAAA,CAACH,QAAQ;QACLe,QAAQ,EAAEA,QAAS;QACnBR,IAAI,EAAEA,IAAK;QACXK,YAAY,EAAEA,YAAa;QAC3BF,YAAY,EAAEA,YAAa;QAC3BI,aAAa,EAAEA;MAAc;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtD,OAAA;MAAK+C,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,GAAC,eAAAhD,OAAA,CAACF,QAAQ;QAACyD,KAAK,EAAE3C;MAAS;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAACnD,EAAA,CAtFQF,WAAW;EAAA,QAOCR,WAAW;AAAA;AAAA+D,EAAA,GAPvBvD,WAAW;AAwFpB,eAAeA,WAAW;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}