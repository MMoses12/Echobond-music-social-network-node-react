{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\EchoBond\\\\Client\\\\src\\\\components\\\\mainSpace\\\\artists.js\",\n  _s = $RefreshSig$();\n// Basic imports.\nimport React, { useState, useEffect } from \"react\";\n\n// Import axios for requests.\nimport axios from \"axios\";\n\n// React spinner.\nimport { ClipLoader } from 'react-spinners';\n\n// Component import.\nimport ArtistComp from \"../artistsComponent/artistsComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Artists(props) {\n  _s();\n  const [allArtists, setAllArtists] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch all artists' data.\n  useEffect(() => {\n    // Fetch artists data when the component mounts\n    fetchArtists();\n  }, []); // Empty dependency array means this effect runs only once after initial render\n\n  const fetchArtists = async () => {\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      const response = await axios.get(\"http://100.91.43.32:4000/artists/get-all-artists\");\n      setAllArtists(response.data); //assuming the response contains an array of data\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching artists:\", error);\n      setError('Failed to fetch artists');\n      setIsLoading(false);\n    }\n  };\n\n  // Go to a specific artist's page.\n  const handleArtistClick = artist => {\n    props.setSelectedArtist(artist);\n    props.setChoice(\"ArtistsSongs\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col overflow-x-auto h-5/6 select-none\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white mb-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold\",\n        children: \"Artists by Music Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray\",\n        children: \"Explore artists by the kind of music they support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white flex flex-row justify-center flex-wrap gap-20 overflow-y-auto h-full\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center w-full h-full\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: \"purple\",\n          size: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this) : allArtists.length > 0 ? allArtists.map((artist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        onClick: () => handleArtistClick(artist),\n        children: /*#__PURE__*/_jsxDEV(ArtistComp, {\n          image: artist.image,\n          name: artist.name,\n          music: artist.style\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, artist, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No artists found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Artists, \"Ytb7Pf9FXAsnhd/ZchaI93ubq7Y=\");\n_c = Artists;\nexport default Artists;\nvar _c;\n$RefreshReg$(_c, \"Artists\");","map":{"version":3,"names":["React","useState","useEffect","axios","ClipLoader","ArtistComp","jsxDEV","_jsxDEV","Artists","props","_s","allArtists","setAllArtists","isLoading","setIsLoading","fetchArtists","accessToken","localStorage","getItem","defaults","headers","common","response","get","data","error","console","setError","handleArtistClick","artist","setSelectedArtist","setChoice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","color","size","length","map","index","onClick","image","name","music","style","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/EchoBond/Client/src/components/mainSpace/artists.js"],"sourcesContent":["// Basic imports.\nimport React,{useState,useEffect} from \"react\";\n\n// Import axios for requests.\nimport axios from \"axios\";\n\n// React spinner.\nimport { ClipLoader } from 'react-spinners'\n\n// Component import.\nimport ArtistComp from \"../artistsComponent/artistsComponent\";\n\nfunction Artists(props) {\n    const[allArtists,setAllArtists] = useState([]);   \n    const [isLoading, setIsLoading] = useState(true)\n\n    // Fetch all artists' data.\n    useEffect(() => {\n        // Fetch artists data when the component mounts\n        fetchArtists();\n    }, []); // Empty dependency array means this effect runs only once after initial render\n    \n    const fetchArtists = async () => {\n        try{\n            const accessToken = localStorage.getItem('accessToken');\n            axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`\n\n            const response = await axios.get(\"http://100.91.43.32:4000/artists/get-all-artists\")\n            setAllArtists(response.data); //assuming the response contains an array of data\n            setIsLoading(false);\n        }\n        catch(error){\n            console.error(\"Error fetching artists:\", error);\n            setError('Failed to fetch artists');\n            setIsLoading(false);\n        }\n\n    }\n\n    // Go to a specific artist's page.\n    const handleArtistClick = (artist) => {\n       props.setSelectedArtist(artist);\n        props.setChoice(\"ArtistsSongs\");\n    };\n    \n    return (\n        <div className=\"flex flex-col overflow-x-auto h-5/6 select-none\">\n            <div className=\"text-white mb-4 text-center\">\n                <p className=\"font-bold\">Artists by Music Genre</p>\n                <p className=\"text-gray\">Explore artists by the kind of music they support</p>\n            </div>\n            <div className=\"text-white flex flex-row justify-center flex-wrap gap-20 overflow-y-auto h-full\">\n            {isLoading ? (\n                    <div className=\"flex justify-center items-center w-full h-full\">\n                        <ClipLoader color=\"purple\" size={150} /> {/* Spinner component */}\n                    </div>\n                ) : allArtists.length > 0 ? (\n                allArtists.map((artist, index) => (\n                    <div key={artist} className=\"\" onClick={() => handleArtistClick(artist)}>\n                        <ArtistComp \n                            image={artist.image}\n                            name={artist.name}\n                            music={artist.style}\n                        />\n                    </div>\n                ))\n                ) : (\n                    <p>No artists found</p>\n                )}\n            </div>\n        </div>\n    \n);\n\n}\n\nexport default Artists;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}