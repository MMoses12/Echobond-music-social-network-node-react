{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\EchoBond\\\\client\\\\src\\\\components\\\\musicBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/handle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderWithProgress = ({\n  initialValue = 0\n}) => {\n  _s();\n  const [value, setValue] = useState(initialValue);\n\n  // Calculate the percentage of the slider value for the gradient\n  const percentage = value / 1.0 * 100; // Assuming the value range is 0 to 1\n\n  // Inline styles for dynamically updating the slider's background\n  const sliderStyle = {\n    background: `linear-gradient(to right, purple ${percentage}%, #E1E1E6 ${percentage}%)`,\n    cursor: 'pointer',\n    appearance: 'none',\n    width: '100%',\n    height: '8px' // Adjust the track height as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-md mx-auto mt-10\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"1\",\n      step: \"0.01\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      className: \"slider-thumb\",\n      style: sliderStyle\n      // Custom styles for WebKit browsers to style the thumb\n      ,\n      onInput: e => e.target.style.setProperty('--thumb-bg-color', 'purple')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderWithProgress, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\n_c = SliderWithProgress;\nexport default SliderWithProgress;\nvar _c;\n$RefreshReg$(_c, \"SliderWithProgress\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SliderWithProgress","initialValue","_s","value","setValue","percentage","sliderStyle","background","cursor","appearance","width","height","className","children","type","min","max","step","onChange","e","target","style","onInput","setProperty","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/EchoBond/client/src/components/musicBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport '../styles/handle.css'\r\n\r\nconst SliderWithProgress = ({ initialValue = 0 }) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  // Calculate the percentage of the slider value for the gradient\r\n  const percentage = (value / 1.0) * 100; // Assuming the value range is 0 to 1\r\n\r\n  // Inline styles for dynamically updating the slider's background\r\n  const sliderStyle = {\r\n    background: `linear-gradient(to right, purple ${percentage}%, #E1E1E6 ${percentage}%)`,\r\n    cursor: 'pointer',\r\n    appearance: 'none',\r\n    width: '100%',\r\n    height: '8px', // Adjust the track height as needed\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md mx-auto mt-10\">\r\n      <input\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"1\"\r\n        step=\"0.01\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        className=\"slider-thumb\"\r\n        style={sliderStyle}\r\n        // Custom styles for WebKit browsers to style the thumb\r\n        onInput={(e) => e.target.style.setProperty('--thumb-bg-color', 'purple')}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderWithProgress;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,YAAY,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACI,YAAY,CAAC;;EAEhD;EACA,MAAMI,UAAU,GAAIF,KAAK,GAAG,GAAG,GAAI,GAAG,CAAC,CAAC;;EAExC;EACA,MAAMG,WAAW,GAAG;IAClBC,UAAU,EAAG,oCAAmCF,UAAW,cAAaA,UAAW,IAAG;IACtFG,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,KAAK,CAAE;EACjB,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,+BAA+B;IAAAC,QAAA,eAC5Cd,OAAA;MACEe,IAAI,EAAC,OAAO;MACZC,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC,GAAG;MACPC,IAAI,EAAC,MAAM;MACXd,KAAK,EAAEA,KAAM;MACbe,QAAQ,EAAGC,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAE;MAC1CS,SAAS,EAAC,cAAc;MACxBS,KAAK,EAAEf;MACP;MAAA;MACAgB,OAAO,EAAGH,CAAC,IAAKA,CAAC,CAACC,MAAM,CAACC,KAAK,CAACE,WAAW,CAAC,kBAAkB,EAAE,QAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/BIF,kBAAkB;AAAA4B,EAAA,GAAlB5B,kBAAkB;AAiCxB,eAAeA,kBAAkB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}